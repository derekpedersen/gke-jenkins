credentials:
  system:
    domainCredentials:
    - credentials:
      - string:
          description: "derekpedersen github personal access token"
          id: "github_pat"
          scope: GLOBAL
          secret: "{AQAAABAAAAAwK1ZygrNWS2eghyeo/50f7cuQigWIVQnlntbSdc9i8WUEpDBn4C6bWRUfb7P6FlwERk0DG57KO+IxQJotN/N1QQ==}"
      - usernamePassword:
          description: "derekpedersen username/password with pat"
          id: "derekpedersen_github"
          password: "{AQAAABAAAAAwLjmIiU+7Zg+LZo+EgSmGj7LKO1IVVVHJVAxaLWVwfoUqYR0OpJJi5JNu9T5UVJFtkiPHTzk+0HTJbqJgauKFpw==}"
          scope: GLOBAL
          username: "derekpedersen"
      - usernamePassword:
          description: "derekpedersen docker username/password"
          id: "derekpedersen_docker"
          password: "{AQAAABAAAAAQc9ZWbbBNIx/46598zsmFX9J5v4YuqYbohaCfONVeOQc=}"
          scope: GLOBAL
          username: "derekpedersen"
      - string:
          description: "gcloud project id"
          id: "GCLOUD_PROJECT_ID"
          scope: GLOBAL
          secret: "{AQAAABAAAAAQB9Pvr7+3Z6YxyhDwpbqYwPAU7+cqIW54mH/hCUvnkjQ=}"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    globalMatrix:
      permissions:
      - "Agent/Build:derekpedersen"
      - "Agent/Configure:derekpedersen"
      - "Agent/Connect:derekpedersen"
      - "Agent/Create:derekpedersen"
      - "Agent/Delete:derekpedersen"
      - "Agent/Disconnect:derekpedersen"
      - "Credentials/Create:derekpedersen"
      - "Credentials/Delete:derekpedersen"
      - "Credentials/ManageDomains:derekpedersen"
      - "Credentials/Update:derekpedersen"
      - "Credentials/View:derekpedersen"
      - "Job/Build:derekpedersen"
      - "Job/Cancel:derekpedersen"
      - "Job/Configure:derekpedersen"
      - "Job/Create:derekpedersen"
      - "Job/Delete:derekpedersen"
      - "Job/Discover:derekpedersen"
      - "Job/Move:derekpedersen"
      - "Job/Read:anonymous"
      - "Job/Read:authenticated"
      - "Job/Read:derekpedersen"
      - "Job/Workspace:derekpedersen"
      - "Lockable Resources/Reserve:derekpedersen"
      - "Lockable Resources/Unlock:derekpedersen"
      - "Lockable Resources/View:derekpedersen"
      - "Overall/Administer:derekpedersen"
      - "Overall/Read:authenticated"
      - "Overall/Read:derekpedersen"
      - "Run/Delete:derekpedersen"
      - "Run/Replay:derekpedersen"
      - "Run/Update:derekpedersen"
      - "SCM/Tag:derekpedersen"
      - "View/Configure:derekpedersen"
      - "View/Create:derekpedersen"
      - "View/Delete:derekpedersen"
      - "View/Read:anonymous"
      - "View/Read:authenticated"
      - "View/Read:derekpedersen"
  clouds:
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      jenkinsTunnel: "jenkins-1597965510-agent:50000"
      jenkinsUrl: "http://jenkins-1597965510:8080"
      name: "kubernetes"
      namespace: "default"
      serverUrl: "https://kubernetes.default"
      templates:
      - containers:
        - alwaysPullImage: true
          args: "^${computer.jnlpmac} ^${computer.name}"
          image: "us.gcr.io/sleipnir/build-golang:latest"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "jnlp"
          resourceLimitCpu: ".5"
          resourceLimitMemory: "512Mi"
          resourceRequestCpu: ".1"
          resourceRequestMemory: "512Mi"
          workingDir: "/home/jenkins"
        id: "e4a18b6c-8e74-498c-adad-53d145c92728"
        idleMinutes: 15
        idleMinutesStr: "15"
        instanceCap: 5
        instanceCapStr: "5"
        label: "build-golang-stable"
        name: "golang"
        nodeUsageMode: "NORMAL"
        podRetention: "onFailure"
        serviceAccount: "default"
        slaveConnectTimeout: 600
        slaveConnectTimeoutStr: "600"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        yamlMergeStrategy: "override"
      - containers:
        - alwaysPullImage: true
          args: "^${computer.jnlpmac} ^${computer.name}"
          image: "us.gcr.io/sleipnir/build-node:latest"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "jnlp"
          ttyEnabled: true
          workingDir: "/home/jenkins"
        id: "6170664b-ab08-46ae-a41d-a2721b714a12"
        idleMinutes: 15
        idleMinutesStr: "15"
        instanceCap: 5
        instanceCapStr: "5"
        label: "build-node-stable"
        name: "node"
        podRetention: "onFailure"
        slaveConnectTimeout: 600
        slaveConnectTimeoutStr: "600"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        yamlMergeStrategy: "override"
      - containers:
        - alwaysPullImage: true
          args: "^${computer.jnlpmac} ^${computer.name}"
          image: "us.gcr.io/sleipnir/build-jenkins-base:latest"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "jnlp"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        id: "02b8986f-3c2b-46a9-9b2a-00ba2e83cc4e"
        idleMinutes: 15
        idleMinutesStr: "15"
        instanceCap: 5
        instanceCapStr: "5"
        label: "build-base-stable"
        name: "jenkins"
        podRetention: "onFailure"
        slaveConnectTimeout: 600
        slaveConnectTimeoutStr: "600"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        yamlMergeStrategy: "override"
      - containers:
        - alwaysPullImage: true
          args: "^${computer.jnlpmac} ^${computer.name}"
          image: "us.gcr.io/sleipnir/build-dotnetcore:latest"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "jnlp"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        id: "5a8c03b8-ff54-4a37-bef7-563be3f19f09"
        idleMinutes: 15
        idleMinutesStr: "15"
        instanceCap: 5
        instanceCapStr: "5"
        label: "build-dotnetcore-stable"
        name: "dotnet-core"
        podRetention: "onFailure"
        slaveConnectTimeout: 600
        slaveConnectTimeoutStr: "600"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        yamlMergeStrategy: "override"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "jenkins.security.QueueItemAuthenticatorMonitor"
  labelAtoms:
  - name: "build-base-stable"
  - name: "build-dotnetcore-stable"
  - name: "build-golang-stable"
  - name: "build-node-stable"
  - name: "master"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  noUsageStatistics: true
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    github:
      clientID: "725008ee2da8b3bd533e"
      clientSecret: "{AQAAABAAAAAwa7GSqwNKhIvxtV+hfcKsqCJ/ZSaTW3gdFybGTdoGtr32pcwUpQsZdEuoMl+3jtweS1UymcY6NXxyD3N3rj5hTA==}"
      githubApiUri: "https://api.github.com"
      githubWebUri: "https://github.com"
      oauthScopes: "read:org,user:email,repo"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  sSHD:
    port: -1
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  casCGlobalConfig:
    configurationPath: "https://raw.githubusercontent.com/pedersen-io/gke-jenkins/master/JenkinsConfig.yaml"
  defaultFolderConfiguration:
    healthMetrics:
    - worstChildHealthMetric:
        recursive: true
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    configs:
    - credentialsId: "derekpedersen_github_pat"
      manageHooks: false
      name: "github.com"
    hookUrl: "https://jenkins.pedersen.io/github-webhook/"
  gitSCM:
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    globalConfigEmail: "jenkins@pedersen.io"
    globalConfigName: "jenkins"
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "jenkins@pedersen.io"
    url: "https://jenkins.pedersen.io/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
